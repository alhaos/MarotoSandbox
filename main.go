package main

import (
	"fmt"
	"github.com/johnfercher/maroto/pkg/color"
	"github.com/johnfercher/maroto/pkg/consts"
	"github.com/johnfercher/maroto/pkg/pdf"
	"github.com/johnfercher/maroto/pkg/props"

	"time"
)

func main() {

	m := pdf.NewMaroto(consts.Portrait, consts.A4)

	m.SetBorder(true)

	m.SetPageMargins(10, 5, 10)
	m.SetDefaultFontFamily("Times")

	m.Row(10, func() {

		m.Col(4, func() {
			m.Text("Generated by gits", props.Text{
				Size: 8,
				Color: color.Color{
					Red:   70,
					Green: 70,
					Blue:  70,
				},
			})
		})

		t := time.Now().Format("2006-01-02 3:4:5 PM")
		m.Col(4, func() {
			m.Text(fmt.Sprintf("Printerd on: %s", t), props.Text{
				Size:  8,
				Align: consts.Center,
			})
		})

		m.Col(4, func() {
			m.Text("page 1 of 1", props.Text{
				Size:  8,
				Align: consts.Right,
			})
		})
	})

	m.Row(10, func() {
		m.Col(8, func() {
			m.Text("Lincoln Diagnostics, LLC", props.Text{
				Size:        16,
				Style:       consts.Bold,
				Extrapolate: true,
			})
		})
		m.Col(4, func() {

			_ = m.Barcode("13721917", props.Barcode{
				Center:  true,
				Percent: 70,
			})
		})
	})

	m.Row(10, func() {
		m.Col(8, func() {

		})
		m.Col(4, func() {
			m.Text(fmt.Sprintf("Req# %v", 13721917), props.Text{
				Size:  8,
				Align: consts.Center,
			})
		})
	})

	m.Line(10)
	m.SetBorder(true)

	err := m.OutputFileAndClose("out.pdf")
	if err != nil {
		panic(err)
	}
}
